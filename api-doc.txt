【客资登记系统 API 文档】

============================
0. 用户认证与鉴权
============================

0.1 用户注册
POST /api/users/register
参数（JSON）：
{
  "username": "admin",
  "password": "123456",
  "nickname": "管理员",
  "role": "admin"
}

成功返回：
{
  "code": 0,
  "message": "注册成功",
  "data": {
    "id": 1,
    "username": "admin"
  }
}

错误返回：
{
  "code": 400,
  "message": "用户名和密码必填"
}

0.2 用户登录
POST /api/users/login
参数（JSON）：
{
  "username": "admin",
  "password": "123456"
}

成功返回：
{
  "code": 0,
  "message": "登录成功",
  "data": {
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
    "user": {
      "id": 1,
      "username": "admin",
      "nickname": "管理员",
      "role": "admin"
    }
  }
}

错误返回：
{
  "code": 400,
  "message": "用户名和密码必填"
}

0.3 获取用户列表
GET /api/users

成功返回：
{
  "code": 0,
  "data": [
    {
      "id": 1,
      "username": "admin",
      "nickname": "管理员",
      "role": "admin",
      "created_at": "2024-01-01T10:00:00.000Z",
      "updated_at": "2024-01-01T10:00:00.000Z"
    }
  ]
}

错误返回：
{
  "code": 500,
  "message": "查询失败",
  "error": "错误详情"
}

0.4 获取所有销售用户
GET /api/users/sales

成功返回：
{
  "code": 0,
  "data": [
    {
      "id": 3,
      "username": "sales01",
      "nickname": "销售1",
      "role": "sales",
      "created_at": "2025-07-18T10:13:13.000Z",
      "updated_at": "2025-07-18T10:13:13.000Z"
    }
    // ...更多销售用户
  ]
}

错误返回：
{
  "code": 500,
  "message": "查询失败",
  "error": "错误详情"
}

说明：
- 仅返回 role = 'sales' 的用户，且不包含密码字段。

0.4 获取用户详情
GET /api/users/:id

成功返回：
{
  "code": 0,
  "data": {
    "id": 1,
    "username": "admin",
    "nickname": "管理员",
    "role": "admin",
    "created_at": "2024-01-01T10:00:00.000Z",
    "updated_at": "2024-01-01T10:00:00.000Z"
  }
}

错误返回：
{
  "code": 404,
  "message": "用户不存在"
}

0.5 修改用户信息
PUT /api/users/:id
参数（JSON）：
{
  "nickname": "新昵称",
  "role": "manager",
  "password": "新密码"
}

说明：
- 所有参数都是可选的，只修改传入的字段
- 如果传入 password，会自动加密存储
- 返回的用户信息中不包含密码字段

成功返回：
{
  "code": 0,
  "message": "修改成功"
}

错误返回：
{
  "code": 404,
  "message": "用户不存在"
}

0.6 删除用户
DELETE /api/users/:id

成功返回：
{
  "code": 0,
  "message": "删除成功"
}

错误返回：
{
  "code": 404,
  "message": "用户不存在"
}

注意：
- 用户管理接口需要管理员权限
- 删除用户前请确保该用户没有关联的重要数据
- 密码字段在所有返回中都会被自动排除

============================
1. 线索管理（customer_leads）
============================

注意：以下所有业务接口都需要在请求头中携带有效的 JWT Token：
Authorization: Bearer your_jwt_token

示例：
GET /api/leads
Headers:
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

权限控制说明：
- admin（管理员）：可以查看、编辑、删除所有线索
- service（客服）：只能查看、编辑、删除自己登记的线索（follow_up_person = 当前用户ID）
- sales（销售）：只能查看、编辑、删除分配给自己的线索（current_follower = 当前用户ID）
- 其他角色：默认只能查看、编辑、删除自己登记的线索

1.1 新增线索
POST /api/leads
参数（JSON）：
{
  "customer_nickname": "客户昵称",
  "source_platform": "抖音",
  "source_account": "douyin123",
  "contact_account": "13800000000",
  "lead_time": "2024-06-01 10:00:00",
  "is_contacted": 1,
  "intention_level": "高",
  // "follow_up_person" 字段由后端自动填充为当前登录用户ID，前端无需传递
  "is_deal": 0,
  "deal_date": null,
  "follow_up_content": "客户首次进线索，需要进一步跟进", // 必填字段
  "create_follow_up": true, // 可选，默认为true，是否创建跟进记录
  "current_follower": 2 // 必填，分配给哪个销售跟进，传用户ID
}

注意：
- follow_up_person 字段由后端自动填充为当前登录用户ID，前端无需传递（这个字段记录的是登记人）
- current_follower 字段为必填，前端必须传递用户ID，表示分配给哪个销售跟进
- 编辑线索时禁止前端修改 follow_up_person 字段，且 current_follower 字段由后端自动覆盖为当前登录用户ID，前端传不传都无效
- created_at（创建时间）和updated_at（更新时间）由系统自动处理，前端无需传递
- create_follow_up默认为true，新增线索时会自动创建首次跟进记录
- 如果设置为false，则不会创建跟进记录

成功返回：
{
  "success": true, 
  "id": 1,
  "followUpId": 1,
  "createdFollowUp": true,
  "performance": {
    "totalTime": "150ms",
    "dbTime": "50ms"
  }
}

错误返回：
{
  "success": false,
  "message": "错误信息",
  "performance": {
    "totalTime": "200ms"
  }
}

错误码说明：
- 400: 参数错误（必填字段缺失、格式错误等）
- 500: 服务器内部错误（数据库连接失败、插入失败等）

1.2 获取线索列表
GET /api/leads

请求参数（Query）
| 参数名             | 类型    | 必填 | 说明                         |
|--------------------|---------|------|------------------------------|
| page               | int     | 否   | 页码，默认1                  |
| page_size          | int     | 否   | 每页数量，默认20，最大100     |
| intention_level    | string  | 否   | 意向等级（高/中/低）         |
| is_deal            | int     | 否   | 是否成交（0/1）              |
| is_contacted       | int     | 否   | 是否联系上（0/1）            |
| keyword            | string  | 否   | 关键字（客户昵称/联系方式/来源账号模糊搜索） |
| date_from          | string  | 否   | 起始时间（yyyy-MM-dd）       |
| date_to            | string  | 否   | 结束时间（yyyy-MM-dd）       |
| customer_nickname  | string  | 否   | 客户昵称模糊搜索             |

权限控制说明：
- admin：返回所有线索
- service：只返回自己登记的线索（follow_up_person = 当前用户ID）
- sales：只返回分配给自己的线索（current_follower = 当前用户ID）
- 其他角色：只返回自己登记的线索

成功返回示例：
```
{
  "success": true,
  "total": 2, // 总记录数
  "list": [
    {
      "id": 1, // 线索ID
      "customer_nickname": "张三", // 客户昵称
      "source_platform": "抖音", // 来源平台
      "source_account": "douyin123", // 来源账号
      "contact_account": "13800000000", // 客户联系方式
      "lead_time": "2025-07-19 10:00:00", // 进线索时间
      "is_contacted": 1, // 是否联系上（0=否，1=是）
      "intention_level": "高", // 意向等级
      "follow_up_person": "2", // 登记人用户ID（字符串）
      "is_deal": 0, // 是否成交（0=否，1=是）
      "deal_date": null, // 成交日期（仅成交时有值）
      "need_followup": 1, // 当前周期是否需要跟进（1=是，0=否）
      "end_followup": 0, // 是否终结跟进（1=终结，0=未终结）
      "end_followup_reason": null, // 终结原因（终结时必填）
      "current_follower": {
        "id": 3, // 当前分配的跟进人用户ID（销售ID）
        "nickname": "销售A", // 跟进人昵称
        "username": "sales01" // 跟进人用户名
      },
      "created_at": "2025-07-19T10:00:00.000Z", // 创建时间
      "updated_at": "2025-07-19T10:00:00.000Z", // 更新时间
      "latest_follow_up": { // 最新一条跟进记录
        "follow_up_time": "2025-07-19 10:00:00", // 最新跟进时间
        "follow_up_content": "首次联系，客户有意向" // 最新跟进内容
      }
    }
    // ...更多线索
  ],
  "performance": {
    "totalTime": "120ms", // 接口总耗时
    "dbTime": "80ms" // 数据库操作耗时
  }
}
```

返回字段说明：
| 字段名                | 类型      | 说明                                                         |
|-----------------------|-----------|--------------------------------------------------------------|
| id                    | int       | 线索ID（主键）                                               |
| customer_nickname     | string    | 客户昵称                                                     |
| source_platform       | string    | 来源平台（如抖音、微信等）                                   |
| source_account        | string    | 来源账号                                                     |
| contact_account       | string    | 客户联系方式（手机号、微信号等）                             |
| lead_time             | string    | 进线索时间（yyyy-MM-dd HH:mm:ss）                            |
| is_contacted          | int       | 是否联系上（0=否，1=是）                                     |
| intention_level       | string    | 意向等级（高/中/低）                                         |
| follow_up_person      | string    | 登记人用户ID（字符串，实际存储为用户ID）                     |
| is_deal               | int       | 是否成交（0=否，1=是）                                       |
| deal_date             | string    | 成交日期（yyyy-MM-dd），仅在成交时填写，否则为null           |
| need_followup         | int       | 当前周期是否需要跟进（1=是，0=否，系统自动维护）              |
| end_followup          | int       | 是否终结跟进（1=终结，0=未终结）                             |
| end_followup_reason   | string    | 终结原因（终结时必填，否则为null）                           |
| current_follower      | object    | 当前分配的跟进人用户ID（销售ID），包含id、nickname、username |
| created_at            | string    | 创建时间（ISO格式）                                          |
| updated_at            | string    | 更新时间（ISO格式）                                          |
| latest_follow_up      | object    | 最新一条跟进记录（如有）                                     |
| └─ follow_up_time     | string    | 最新跟进时间（yyyy-MM-dd HH:mm:ss）                          |
| └─ follow_up_content  | string    | 最新跟进内容                                                 |
| performance           | object    | 性能统计信息                                                 |
| └─ totalTime          | string    | 接口总耗时                                                   |
| └─ dbTime             | string    | 数据库操作耗时                                               |

错误返回示例：
```
{
  "success": false,
  "message": "错误信息",
  "performance": {
    "totalTime": "50ms"
  }
}
```

备注：
- follow_up_person 字段为字符串，存储的是用户ID（与 users.id 对应），用于登记人权限判断。
- current_follower 字段为整数，存储的是分配的销售用户ID（与 users.id 对应）。
- latest_follow_up 只返回最新一条跟进记录的时间和内容，便于前端展示。
- 权限控制已在后端实现，前端无需额外处理。

1.3 获取线索详情
GET /api/leads/:id

成功返回：
{ 
  "success": true, 
  "data": { 
    ...线索对象...,
    "need_followup": 1, // 当前周期是否需要跟进
    "end_followup": 0,  // 是否终结跟进
    "end_followup_reason": null, // 终结原因
    "latest_follow_up": {
      "follow_up_time": "2024-06-01 15:30:00",
      "follow_up_content": "客户有意向，需要进一步跟进"
    }
  } 
}

注意：线索详情会包含最新一条跟进记录的时间和内容

错误返回：
{
  "success": false,
  "message": "错误信息"
}

错误码说明：
- 404: 未找到该线索
- 400: 参数错误（ID格式错误）
- 500: 服务器内部错误（数据库查询失败等）

1.4 编辑线索
PUT /api/leads/:id
参数（JSON）：
{
  "customer_nickname": "客户昵称",
  "source_platform": "抖音",
  "contact_account": "13800000000",
  "intention_level": "高",
  "follow_up_person": "张三",
  "is_deal": 1,
  "deal_date": "2024-06-02",
  "create_follow_up": true, // 可选，默认为false，是否创建跟进记录
  "follow_up_content": "客户确认购买", // 创建跟进记录时必填
  "follow_up_time": "2024-06-02 15:30:00", // 可选，跟进时间
  "follow_up_method": "电话", // 可选，跟进方式
  "follow_up_result": "成交", // 可选，跟进结果
  "end_followup": 1, // 是否终结跟进（1=终结，0=未终结）
  "end_followup_reason": "客户已拉黑" // 终结原因（终结时必填）
}

说明：
- 终结跟进时，end_followup 必须为1，且 end_followup_reason 必填，否则返回400错误
- 终结后，need_followup 会自动设为0，且该线索不再参与自动提醒

成功返回：
{ 
  "success": true,
  "updatedLead": true,
  "followUpId": 2,
  "createdFollowUp": true,
  "performance": {
    "totalTime": "100ms",
    "dbTime": "30ms"
  }
}

注意：
- create_follow_up默认为false，编辑线索时不会自动创建跟进记录
- 只有当前端明确设置create_follow_up为true时，才会创建跟进记录
- 创建跟进记录时，follow_up_content为必填字段

错误返回：
{
  "success": false,
  "message": "错误信息"
}

错误码说明：
- 404: 未找到该线索
- 400: 参数错误（必填字段缺失、格式错误等）
- 500: 服务器内部错误（数据库更新失败等）

1.5 删除线索
DELETE /api/leads/:id

成功返回：
{ 
  "success": true,
  "deletedFollowUps": 2,
  "performance": {
    "totalTime": "50ms",
    "dbTime": "30ms"
  }
}

错误返回：
{
  "success": false,
  "message": "错误信息",
  "performance": {
    "totalTime": "50ms"
  }
}

错误码说明：
- 404: 未找到该线索
- 400: 参数错误（ID格式错误）或外键约束错误
- 500: 服务器内部错误（数据库删除失败等）

注意：删除线索时会同时删除该线索的所有跟进记录

============================
2. 跟进记录（follow_up_records）
============================

2.1 新增跟进记录
POST /api/followups
参数（JSON）：
{
  "lead_id": 1,
  "follow_up_time": "2024-06-02 15:00:00",
  "follow_up_method": "电话",
  "follow_up_content": "已电话沟通，客户有意向",
  "follow_up_result": "待进一步跟进",
  "follow_up_person": "张三"
}

说明：
- 新增跟进记录后，系统会自动将该线索的 need_followup 字段设为0

成功返回：
{ "success": true, "id": 1 }

错误返回：
{
  "success": false,
  "message": "错误信息"
}

错误码说明：
- 400: 参数错误（必填字段缺失、格式错误等）
- 404: 关联的线索不存在
- 500: 服务器内部错误（数据库插入失败等）

2.2 获取某条线索的跟进记录
GET /api/followups?lead_id=1

成功返回：
{
  "success": true,
  "list": [ { ...跟进记录对象... } ]
}

错误返回：
{
  "success": false,
  "message": "错误信息"
}

错误码说明：
- 400: 参数错误（lead_id格式错误等）
- 500: 服务器内部错误（数据库查询失败等）

2.3 获取某条线索的所有跟进记录（RESTful）
GET /api/followups/:leadId?page=1&page_size=20

参数说明：
- page: 页码，默认为1
- page_size: 每页大小，默认为20，最大100

成功返回：
{
  "success": true,
  "leadId": 1,
  "total": 25,
  "page": 1,
  "page_size": 20,
  "total_pages": 2,
  "list": [
    {
      "id": 25,
      "lead_id": 1,
      "follow_up_time": "2024-06-05 15:30:00",
      "follow_up_method": "面谈",
      "follow_up_content": "面谈成功，客户确认购买",
      "follow_up_result": "成交",
      "follow_up_person": "张三",
      "created_at": "2024-06-05 15:30:00",
      "updated_at": "2024-06-05 15:30:00"
    },
    {
      "id": 24,
      "lead_id": 1,
      "follow_up_time": "2024-06-04 14:00:00",
      "follow_up_method": "电话",
      "follow_up_content": "客户有意向，约明天面谈",
      "follow_up_result": "待面谈",
      "follow_up_person": "张三",
      "created_at": "2024-06-04 14:00:00",
      "updated_at": "2024-06-04 14:00:00"
    }
    // ... 更多记录
  ],
  "performance": {
    "totalTime": "50ms",
    "dbTime": "30ms"
  }
}

错误返回：
{
  "success": false,
  "message": "错误信息",
  "performance": {
    "totalTime": "50ms"
  }
}

错误码说明：
- 400: 参数错误（leadId格式错误、分页参数错误）
- 500: 服务器内部错误（数据库查询失败等）

注意：
- 返回该线索的跟进记录，按时间倒序排列，包含全部字段
- 支持分页查询，适合大量记录的场景
- 默认每页20条，最大100条

============================
3. 操作日志（operation_logs）
============================

3.1 查询日志
GET /api/logs?lead_id=1&date_from=2024-06-01&date_to=2024-06-30

成功返回：
{
  "success": true,
  "list": [ { ...日志对象... } ]
}

错误返回：
{
  "success": false,
  "message": "错误信息"
}

错误码说明：
- 400: 参数错误（日期格式错误等）
- 500: 服务器内部错误（数据库查询失败等）

============================
4. 跟进超期提醒配置（followup_remind_config）
============================

4.1 获取所有意向级别的提醒配置
GET /api/followup-remind-config

成功返回：
{
  "success": true,
  "list": [
    {
      "id": 1,
      "intention_level": "高",
      "interval_days": 1,
      "updated_at": "2025-07-12T12:00:00.000Z"
    },
    {
      "id": 2,
      "intention_level": "中",
      "interval_days": 3,
      "updated_at": "2025-07-12T12:00:00.000Z"
    },
    {
      "id": 3,
      "intention_level": "低",
      "interval_days": 5,
      "updated_at": "2025-07-12T12:00:00.000Z"
    }
  ]
}

4.2 更新某个意向级别的提醒配置
PUT /api/followup-remind-config/:level
- :level 取值为 高、中、低

请求体：
{
  "interval_days": 3
}

成功返回：
{ "success": true }

错误返回：
{ "success": false, "message": "错误信息" }

字段说明：
- intention_level：意向等级（高/中/低）
- interval_days：最大未跟进天数

4.3 手动触发跟进提醒检查
POST /api/followup-remind-config/trigger-check

说明：手动触发系统检查所有超期线索并发送邮件提醒

成功返回：
{
  "success": true,
  "message": "检查完成，发现 5 条超期线索",
  "data": {
    "overdue_count": 5,
    "overdue_list": [
      {
        "lead_id": 1,
        "customer_nickname": "张三",
        "intention_level": "高",
        "last_follow_up_time": "2024-06-01 10:00:00",
        "follow_up_person": "李四",
        "overdue_days": 3,
        "config_days": 1,
        "email_list": ["a@xx.com", "b@xx.com"]
      }
    ]
  },
  "performance": {
    "totalTime": "500ms"
  }
}

错误返回：
{
  "success": false,
  "message": "错误信息",
  "performance": {
    "totalTime": "200ms"
  }
}

错误码说明：
- 500: 服务器内部错误（数据库查询失败、邮件发送失败等）

注意：
- 系统会自动检查所有意向等级的配置
- 如果发现超期线索，会自动发送邮件给配置的收件人列表
- 如果没有配置收件人邮箱，则只返回检查结果，不发送邮件
- 系统默认每天上午9点自动执行检查，此接口用于手动触发

============================
5. 数据分析统计（statistics）
============================

5.1 线索统计概览
GET /api/statistics/leads-overview

成功返回：
{
  "success": true,
  "data": {
    "total_leads": 150,
    "intention_distribution": {
      "高": 45,
      "中": 60,
      "低": 45
    },
    "platform_distribution": {
      "抖音": 80,
      "微信": 50,
      "其他": 20
    },
    "recent_additions": {
      "today": 5,
      "this_week": 15,
      "this_month": 45
    },
    "last_15_days_trend": [
      {
        "date": "2024-01-01",
        "count": 3
      },
      {
        "date": "2024-01-02", 
        "count": 5
      }
      // ... 最近15天的数据
    ],
    "followup": {
      "this_week_lead_count": 12,   // 本周被跟进的线索数（去重）
      "this_week_record_count": 30  // 本周跟进记录总数
    },
    "today_stats": {
      "followed_leads": 2,      // 今日有跟进动作的线索数（去重，按 follow_up_records.created_at）
      "followup_records": 3,    // 今日新建的跟进记录数（按 follow_up_records.created_at）
      "ended_leads": 1          // 今日被终结的线索数（customer_leads.end_followup=1 且 updated_at为当天）
    }
  },
  "performance": {
    "totalTime": "150ms",
    "dbTime": "50ms"
  }
}

错误返回：
{
  "success": false,
  "message": "错误信息",
  "performance": {
    "totalTime": "200ms"
  }
}

错误码说明：
- 500: 服务器内部错误（数据库查询失败等）

字段说明：
- total_leads: 总线索数量
- intention_distribution: 各意向等级分布
- platform_distribution: 各来源平台分布
- recent_additions: 最近新增统计
  - today: 今日新增
  - this_week: 本周新增
  - this_month: 本月新增
- last_15_days_trend: 最近15天趋势数据，用于前端图表展示
- followup: 跟进统计
  - this_week_lead_count: 本周被跟进的线索数（去重，周一到周日）
  - this_week_record_count: 本周跟进记录总数（周一到周日）
- today_stats: 今日业务动作统计（对象）
  - followed_leads: 今日有跟进动作的线索数（去重，按 follow_up_records.created_at）
  - followup_records: 今日新建的跟进记录数（按 follow_up_records.created_at）
  - ended_leads: 今日被终结的线索数（customer_leads.end_followup=1 且 updated_at为当天）
- 其他统计字段口径未变。

============================
6. 跟进超期提醒收件人邮箱（remind_email_list）
============================

5.1 获取所有收件人邮箱
GET /api/remind-email-list

成功返回：
{
  "success": true,
  "list": [
    { "id": 1, "email": "a@xx.com" },
    { "id": 2, "email": "b@xx.com" }
  ]
}

5.2 新增收件人邮箱
POST /api/remind-email-list

请求体：
{
  "email": "c@xx.com"
}

成功返回：
{ "success": true, "id": 3 }

5.3 删除收件人邮箱
DELETE /api/remind-email-list/:id

成功返回：
{ "success": true }

错误返回：
{ "success": false, "message": "错误信息" }

字段说明：
- email：收件人邮箱，单条记录

说明：所有意向级别的超期提醒都发给该邮箱列表。

============================
7. 鉴权错误码说明
============================

所有业务接口（除注册、登录外）都需要在请求头中携带有效的 JWT Token：

Headers:
Authorization: Bearer your_jwt_token

常见错误码：
- 401: 未携带有效token
  {
    "code": 401,
    "message": "未携带有效token"
  }

- 401: token无效或已过期
  {
    "code": 401,
    "message": "token无效或已过期"
  }

使用流程：
1. 先调用 POST /api/users/register 注册用户
2. 再调用 POST /api/users/login 登录获取 token
3. 后续所有业务接口都在请求头中携带 Authorization: Bearer token 